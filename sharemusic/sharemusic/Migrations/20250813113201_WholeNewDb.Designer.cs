// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using sharemusic.Db;

#nullable disable

namespace sharemusic.Migrations
{
    [DbContext(typeof(MusicDbContext))]
    [Migration("20250813113201_WholeNewDb")]
    partial class WholeNewDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("sharemusic.Models.ArtistModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Genres")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("SpotifyId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("sharemusic.Models.PlaylistModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CoverUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SpotifyId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Playlists");
                });

            modelBuilder.Entity("sharemusic.Models.SongModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Album")
                        .HasColumnType("TEXT");

                    b.Property<string>("Artist")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArtistId")
                        .HasColumnType("TEXT");

                    b.Property<string>("ArtistModelId")
                        .HasColumnType("TEXT");

                    b.Property<string>("CoverImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LocalSongPath")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PlaylistModelId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<int?>("SongLengthInSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SpotifyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ArtistModelId");

                    b.HasIndex("PlaylistModelId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("sharemusic.Models.SpotifyTokenRequestModel", b =>
                {
                    b.Property<string>("AccessToken")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExpiresIn")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("TEXT");

                    b.Property<string>("Scope")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .HasColumnType("TEXT");

                    b.Property<string>("TokenType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("AccessToken");

                    b.ToTable("SpotifyTokens");
                });

            modelBuilder.Entity("sharemusic.Models.SongModel", b =>
                {
                    b.HasOne("sharemusic.Models.ArtistModel", null)
                        .WithMany("Songs")
                        .HasForeignKey("ArtistModelId");

                    b.HasOne("sharemusic.Models.PlaylistModel", null)
                        .WithMany("Songs")
                        .HasForeignKey("PlaylistModelId");
                });

            modelBuilder.Entity("sharemusic.Models.ArtistModel", b =>
                {
                    b.Navigation("Songs");
                });

            modelBuilder.Entity("sharemusic.Models.PlaylistModel", b =>
                {
                    b.Navigation("Songs");
                });
#pragma warning restore 612, 618
        }
    }
}
